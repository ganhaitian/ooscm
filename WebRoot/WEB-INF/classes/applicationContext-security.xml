<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">
  
  <!-- Enable the annotation configuration! -->
  <global-method-security pre-post-annotations="enabled"/>
  
  <!--http pattern="/wlsapp/reader/readercomposite*" security="none" /-->
  <http pattern="/login.jsp" security="none"/>
  <http pattern="/source/**" security="none"/>


  <http entry-point-ref="authenticationProcessingFilterEntryPoint" >
    <logout/>
    <!--<remember-me/>-->
    <custom-filter position="FORM_LOGIN_FILTER" ref="loginFilter" />
    <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
    <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="securityFilter" />  
  </http>
  
  <!-- The login authentication bean -->
  <beans:bean id="loginFilter" class="com.sohu.occsm.auth.LoginAuthenticationFilter">
    <!--Configure the login action-->
    <beans:property name="sessionAuthenticationStrategy" ref="sas" />
  	<beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>                  
    <beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>                
    <beans:property name="authenticationFailureHandler" ref="exceptionMappingAuthenticationFailureHandler"></beans:property>  
    <beans:property name="authenticationManager" ref="opAuthenticationManager"></beans:property>   
  </beans:bean>
  
  
  <beans:bean id="concurrencyFilter"
   class="org.springframework.security.web.session.ConcurrentSessionFilter">
	  <beans:property name="sessionRegistry" ref="sessionRegistry" />
	  <beans:property name="expiredUrl" value="/error/sessionExpired" />
  </beans:bean>
  
  <beans:bean id="sas" class=
 "org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
	  <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	  <beans:property name="maximumSessions" value="1" />
  </beans:bean>

  <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
  
  
  <!-- <beans:bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">  -->  
  <beans:bean id="loginLogAuthenticationSuccessHandler" class="com.sohu.occsm.auth.AjaxAuthenticationSuccessHandler" >  
    <!--<beans:property name="defaultTargetUrl" value="/index.jsp"></beans:property> -->
  </beans:bean>  
  
  <!-- 认证过滤器 -->  
    <beans:bean id="securityFilter" class="com.sohu.occsm.auth.OpSecurityFilter">  
        <!-- 用户拥有的权限 -->  
        <beans:property name="authenticationManager" ref="opAuthenticationManager" />  
        <!-- 用户是否拥有所请求资源的权限 -->  
        <beans:property name="accessDecisionManager" ref="opAccessDecisionManager" />  
        <!-- 资源与权限对应关系 -->  
        <beans:property name="securityMetadataSource" ref="opSecurityMetadataSource" />  
    </beans:bean>  
    
    <beans:bean id="opAccessDecisionManager" class="com.sohu.occsm.auth.OpAccessDecisionManager"/>  
    <beans:bean id="opSecurityMetadataSource" class="com.sohu.occsm.auth.OpSecurityMetadataSource"/>  
  
  <!-- 失败后的处理组件 -->
  <beans:bean id="exceptionMappingAuthenticationFailureHandler"  
        class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">  
    <beans:property name="exceptionMappings">
    	<beans:map>
    		<beans:entry key="org.springframework.security.authentication.BadCredentialsException" value="/error/badCredential" />
    	</beans:map>
    </beans:property>  
 </beans:bean>  
 
 <!-- 简单的url转发处理 -->
 <beans:bean id="simpleUrlAuthenticationFailureHandler"  
        class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">  
    <beans:property name="defaultFailureUrl" value="/error/sessionExpired"></beans:property>  
 </beans:bean> 
  
  <!-- Aliyun authentication provider -->
  <beans:bean id="aliyunAuthProvider" class="com.sohu.occsm.auth.AliyunAuthenticationProvider">
  </beans:bean>
 
  <!-- The authentication manager configuration -->
  <authentication-manager alias="opAuthenticationManager">  
    <authentication-provider ref="aliyunAuthProvider" />
  </authentication-manager>  
  
  <!-- The entry point that hasn't been login -->
  <beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
  	<beans:property name="loginFormUrl" value="/error/toLogin" /> 
  </beans:bean>
  

</beans:beans>