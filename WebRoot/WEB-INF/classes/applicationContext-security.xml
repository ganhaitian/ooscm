<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">
  
  <!-- Enable the annotation configuration! -->
  <global-method-security pre-post-annotations="enabled"/>
  
  <!--http pattern="/wlsapp/reader/readercomposite*" security="none" /-->
  <http pattern="/login.jsp" security="none"/>
  <http pattern="/common/**" security="none"/>


  <http entry-point-ref="authenticationProcessingFilterEntryPoint" >
    <!--<intercept-url pattern="/**" access="ROLE_USER" />  -->
    <!--<form-login login-page='/Login.jsp' default-target-url="/main.jsp" always-use-default-target="true" />
    -->

    <logout/>
    <!--<remember-me/>-->
    <custom-filter position="FORM_LOGIN_FILTER" ref="loginFilter" />
    <custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
    <custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="securityFilter" />  
  </http>
  
  <!-- The login authentication bean -->
  <beans:bean id="loginFilter" class="gndzh.som.summer.login.LoginAuthenticationFilter">
    <!--Configure the login action-->
    <beans:property name="sessionAuthenticationStrategy" ref="sas" />
  	<beans:property name="filterProcessesUrl" value="/j_spring_security_check"></beans:property>                  
    <beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>                
    <beans:property name="authenticationFailureHandler" ref="exceptionMappingAuthenticationFailureHandler"></beans:property>  
    <beans:property name="authenticationManager" ref="opAuthenticationManager"></beans:property>   
  </beans:bean>
  
  
  <beans:bean id="concurrencyFilter"
   class="org.springframework.security.web.session.ConcurrentSessionFilter">
	  <beans:property name="sessionRegistry" ref="sessionRegistry" />
	  <beans:property name="expiredUrl" value="/error/sessionExpired" />
  </beans:bean>
  
  <beans:bean id="sas" class=
 "org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
	  <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry" />
	  <beans:property name="maximumSessions" value="1" />
  </beans:bean>

  <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
  
  
  <!-- <beans:bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">  -->  
  <beans:bean id="loginLogAuthenticationSuccessHandler" class="gndzh.som.summer.security.AjaxAuthenticationSuccessHandler" >  
    <!--<beans:property name="defaultTargetUrl" value="/index.jsp"></beans:property> -->
  </beans:bean>  
  
  <!-- 认证过滤器 -->  
    <beans:bean id="securityFilter" class="gndzh.som.summer.security.OpSecurityFilter">  
        <!-- 用户拥有的权限 -->  
        <beans:property name="authenticationManager" ref="opAuthenticationManager" />  
        <!-- 用户是否拥有所请求资源的权限 -->  
        <beans:property name="accessDecisionManager" ref="opAccessDecisionManager" />  
        <!-- 资源与权限对应关系 -->  
        <beans:property name="securityMetadataSource" ref="opSecurityMetadataSource" />  
    </beans:bean>  
    
    <beans:bean id="opAccessDecisionManager" class="gndzh.som.summer.security.OpAccessDecisionManager"/>  
    <beans:bean id="opSecurityMetadataSource" class="gndzh.som.summer.security.OpSecurityMetadataSource"/>  
  
  <!-- 失败后的处理组件 -->
  <beans:bean id="exceptionMappingAuthenticationFailureHandler"  
        class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">  
    <beans:property name="exceptionMappings">
    	<beans:map>
    		<beans:entry key="org.springframework.security.authentication.BadCredentialsException" value="/error/badCredential" />
    	</beans:map>
    </beans:property>  
 </beans:bean>  
 
 <!-- 简单的url转发处理 -->
 <beans:bean id="simpleUrlAuthenticationFailureHandler"  
        class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">  
    <beans:property name="defaultFailureUrl" value="/error/sessionExpired"></beans:property>  
 </beans:bean> 
 
 <!--  
 <beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
	<beans:constructor-arg value="ldap://ldap.sohu-inc.com:389"/>
 </beans:bean>
 -->
 
 <!-- ldap configuration -->
 <!-- <beans:bean id="ldapAuthProvider" class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider" >
  	<beans:constructor-arg>
		<beans:bean class="org.springframework.security.ldap.authentication.PasswordComparisonAuthenticator">
			<beans:constructor-arg ref="contextSource"/>
			<beans:property name="userSearch">
				<beans:bean class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
				  <beans:constructor-arg index="0" value=""/>
				  <beans:constructor-arg index="1" value="(uid={0})"/>
				  <beans:constructor-arg index="2" ref="contextSource" />
				</beans:bean> 
			</beans:property>
		</beans:bean>
	</beans:constructor-arg>
	<beans:constructor-arg>
		<beans:bean id="ldapAuthoritiesPopulator" class="gndzh.som.summer.security.MyLdapAuthoritiesPopulator">
			<beans:constructor-arg ref="contextSource"/>
			<beans:constructor-arg value="ou=Groups,dc=javali,dc=org"/>
		</beans:bean>
	</beans:constructor-arg>
	<beans:property name="userDetailsContextMapper">
		<beans:bean id="ldapUserDetailsMapper" class="org.springframework.security.ldap.userdetails.LdapUserDetailsMapper">
			<beans:property name="rolePrefix" value="ROLE_"/>
			<beans:property name="convertToUpperCase" value="true"/>
		</beans:bean>
	</beans:property>
  </beans:bean>
   -->
  
  <!-- Ldap Ads configuration -->
  <beans:bean id="adAuthenticationProvider"
  class="org.springframework.security.ldap.authentication.ad.ActiveDirectoryLdapAuthenticationProvider">
    <beans:constructor-arg value="sohu-inc.com" />
    <beans:constructor-arg value="ldap://ldap.sohu-inc.com/" />
    <beans:property name="userDetailsContextMapper">
		<beans:bean class="gndzh.som.summer.security.OpUserDetailsMapper"/>
	</beans:property>
  </beans:bean>
 
  <!-- The authentication manager configuration -->
  <authentication-manager alias="opAuthenticationManager">  
    <!--  
    <authentication-provider>
      <user-service>
        <user name="ganht" password="tiger" authorities="ROLE_USER" />
      </user-service>
    </authentication-provider>
    -->
    <!-- <authentication-provider ref="ldapAuthProvider" /> -->
    <authentication-provider ref="adAuthenticationProvider" />
  </authentication-manager>  
  

  
  <!-- The user detail service configuration -->
  <!-- 
  <beans:bean id="myUserDetailServiceImpl" class="gndzh.som.summer.security.MyUserDetailServiceImpl">  
    <beans:property name="usersDao" ref="usersDao"></beans:property>  
  </beans:bean> 
  -->
  
  <!-- The entry point that hasn't been login -->
  <beans:bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
  	<beans:property name="loginFormUrl" value="/error/toLogin" /> 
  </beans:bean>
  
  <!-- 
  <authentication-manager>
    <authentication-provider>
      <user-service>
        <user name="jimi" password="jimispassword" authorities="ROLE_USER, ROLE_ADMIN" />
        <user name="bob" password="bobspassword" authorities="ROLE_USER" />
      </user-service>
    </authentication-provider>
  </authentication-manager> 
  -->
  

</beans:beans>